system=$(uname)

WORK_DIR=$WORKSPACE
RES_DIR="${WORK_DIR}/client_resource"

mkdir -p $RES_DIR

USER="admin"
APP_HOST="192.168.1.75"
NGINX_HOST="192.168.1.44"

DEST_RES_DIR="/data/sites/summoners_dev/logs/lr"
DEST_VER_DIR="/data/sites/summoners_dev/logs/client_resource"
#DEST_VER_DIR2="/data/sites/superhero2_tw_dev_new/logs/client_resource"
GIT_REPO_PATH=$WORKSPACE

cd $GIT_REPO_PATH
echo "GIT_REPO_PATH:", $GIT_REPO_PATH

# 先删除所有本地的 tag
git tag -l | xargs git tag -d

# 清除所有的 JSON 和 ZIP 包，避免 TAG 删除的情况存在
rm -f $RES_DIR/*.json
rm -f $RES_DIR/*.zip
rm -f $RES_DIR/*.txt

# 从远端服务器获取最新的内容
git fetch --prune --all --tags

END_TAG=$(git tag -l "st[0-9]*" | sort | tail -n1)
echo "$END_TAG"
# 判断 END_TAG 是否存在
flag_is_exist=$(git tag -l | grep $END_TAG)

echo "flag_is_exist is ${flag_is_exist}"

if [ "$flag_is_exist" != "$END_TAG" ]; then
    echo ""
    echo "${END_TAG} is not exists! - ${flag_is_exist}"
    echo "Update fail!"
    echo ""
    exit 1
fi

git checkout $END_TAG



TAG_PREFIX=${END_TAG:0:2}

echo "TAG_PREFIX: " ${TAG_PREFIX}
CON_STR="_"
echo "con_string: " ${CON_STR}

function gerenate_md5(){
    zip_file=$1;
    if [ "Darwin" != $system ]; then  # linux
        echo $(md5sum $RES_DIR/$zip_file.zip | awk '{print $1}')
    else  # mac
        echo $(md5 $RES_DIR/$zip_file.zip | awk '{print $NF}')
    fi
}

function gerenate_json(){
    different_file=$1;
    if [ "$different_file" = "" ]; then
        different_files="[]"
		sum_size="0K"
    else
        different_files="[\"$different_file\"]"
		sum_size=`du -sh $RES_DIR/$different_file | awk '{ print $1 }'`
    fi
    md5_value=$2;
    current_tag=$3;
    echo "{\"different_files\": $different_files, \"md5\": \"$md5_value\", \"current_version\": \"$current_tag\", \"sum_size\": \"$sum_size\"}"
}

# 获取 TAG 列表
# TAG_LIST=$(git tag -l | sort | grep "^${TAG_PREFIX}")
TAG_LIST=`git tag -l 'st*.*.*.*'| grep "^${TAG_PREFIX}" |sort -r |head -n 100`

# FIRST_TAG=`git tag -l 'st*.*.*.*' | sort | grep "^${TAG_PREFIX}" | head -n 1`
# TAG_LIST=`git tag -l 'st*.*.*.*' | sort | grep "^${TAG_PREFIX}" | tail -n 10`
# END_TAG_LIST=(${FIRST_TAG[@]} ${TAG_LIST[@]})

for i in $TAG_LIST
do
    if [[ "$i" > "$END_TAG" ]]; then
        continue
    fi

    echo $i

    if [ "x$i" == "x$END_TAG" ]; then
        json_str=$(gerenate_json "" "" $END_TAG)
        echo $json_str > $RES_DIR/$END_TAG$CON_STR$i.json
        continue
    fi

    FILE_LIST=$(git diff --diff-filter=d --name-only ${i} ${END_TAG} | grep -vE '^ccbResources|^"ccbResources|^config|^"config')

    git archive -o $RES_DIR/${END_TAG}${CON_STR}${i}.zip $END_TAG $FILE_LIST

    echo $FILE_LIST >> $RES_DIR/$END_TAG$CON_STR$i.txt
    sed -i 's/ /\n/g' $RES_DIR/$END_TAG$CON_STR$i.txt

    md5_value=$(gerenate_md5 $END_TAG$CON_STR"$i")

    DIFFERENT_FILE="${END_TAG}${CON_STR}${i}.zip"
    #mv $RES_DIR/${i}.zip $RES_DIR/$DIFFERENT_FILE
    json_str=$(gerenate_json $DIFFERENT_FILE $md5_value $END_TAG)
    echo $json_str > $RES_DIR/$END_TAG$CON_STR$i.json

done

# 同步zip txt
/usr/bin/rsync -a -z --delete --delete-after --progress --exclude='*.json'  $RES_DIR/ $USER@$NGINX_HOST:$DEST_RES_DIR/

# 同步json
/usr/bin/rsync -a -z --delete --delete-after --progress --exclude='*.zip' --exclude='*.txt'  $RES_DIR/ $USER@$APP_HOST:$DEST_VER_DIR/

echo "Update Resource Done!"